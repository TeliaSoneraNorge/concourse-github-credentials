// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/telia-oss/concourse-github-lambda (interfaces: GithubManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/github"
	reflect "reflect"
)

// MockGithubManager is a mock of GithubManager interface
type MockGithubManager struct {
	ctrl     *gomock.Controller
	recorder *MockGithubManagerMockRecorder
}

// MockGithubManagerMockRecorder is the mock recorder for MockGithubManager
type MockGithubManagerMockRecorder struct {
	mock *MockGithubManager
}

// NewMockGithubManager creates a new mock instance
func NewMockGithubManager(ctrl *gomock.Controller) *MockGithubManager {
	mock := &MockGithubManager{ctrl: ctrl}
	mock.recorder = &MockGithubManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGithubManager) EXPECT() *MockGithubManagerMockRecorder {
	return m.recorder
}

// CreateKey mocks base method
func (m *MockGithubManager) CreateKey(arg0 context.Context, arg1, arg2 string, arg3 *github.Key) (*github.Key, *github.Response, error) {
	ret := m.ctrl.Call(m, "CreateKey", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*github.Key)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateKey indicates an expected call of CreateKey
func (mr *MockGithubManagerMockRecorder) CreateKey(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateKey", reflect.TypeOf((*MockGithubManager)(nil).CreateKey), arg0, arg1, arg2, arg3)
}

// DeleteKey mocks base method
func (m *MockGithubManager) DeleteKey(arg0 context.Context, arg1, arg2 string, arg3 int) (*github.Response, error) {
	ret := m.ctrl.Call(m, "DeleteKey", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*github.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteKey indicates an expected call of DeleteKey
func (mr *MockGithubManagerMockRecorder) DeleteKey(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockGithubManager)(nil).DeleteKey), arg0, arg1, arg2, arg3)
}

// ListKeys mocks base method
func (m *MockGithubManager) ListKeys(arg0 context.Context, arg1, arg2 string, arg3 *github.ListOptions) ([]*github.Key, *github.Response, error) {
	ret := m.ctrl.Call(m, "ListKeys", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*github.Key)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListKeys indicates an expected call of ListKeys
func (mr *MockGithubManagerMockRecorder) ListKeys(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockGithubManager)(nil).ListKeys), arg0, arg1, arg2, arg3)
}
