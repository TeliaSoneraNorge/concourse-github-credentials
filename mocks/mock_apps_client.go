// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/telia-oss/concourse-github-lambda (interfaces: AppsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/github"
	reflect "reflect"
)

// MockAppsClient is a mock of AppsClient interface
type MockAppsClient struct {
	ctrl     *gomock.Controller
	recorder *MockAppsClientMockRecorder
}

// MockAppsClientMockRecorder is the mock recorder for MockAppsClient
type MockAppsClientMockRecorder struct {
	mock *MockAppsClient
}

// NewMockAppsClient creates a new mock instance
func NewMockAppsClient(ctrl *gomock.Controller) *MockAppsClient {
	mock := &MockAppsClient{ctrl: ctrl}
	mock.recorder = &MockAppsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAppsClient) EXPECT() *MockAppsClientMockRecorder {
	return m.recorder
}

// CreateInstallationToken mocks base method
func (m *MockAppsClient) CreateInstallationToken(arg0 context.Context, arg1 int64) (*github.InstallationToken, *github.Response, error) {
	ret := m.ctrl.Call(m, "CreateInstallationToken", arg0, arg1)
	ret0, _ := ret[0].(*github.InstallationToken)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateInstallationToken indicates an expected call of CreateInstallationToken
func (mr *MockAppsClientMockRecorder) CreateInstallationToken(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstallationToken", reflect.TypeOf((*MockAppsClient)(nil).CreateInstallationToken), arg0, arg1)
}

// ListRepos mocks base method
func (m *MockAppsClient) ListRepos(arg0 context.Context, arg1 *github.ListOptions) ([]*github.Repository, *github.Response, error) {
	ret := m.ctrl.Call(m, "ListRepos", arg0, arg1)
	ret0, _ := ret[0].([]*github.Repository)
	ret1, _ := ret[1].(*github.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListRepos indicates an expected call of ListRepos
func (mr *MockAppsClientMockRecorder) ListRepos(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRepos", reflect.TypeOf((*MockAppsClient)(nil).ListRepos), arg0, arg1)
}
